public class Solution {
    public int trap(int[] height) {
        if(height.length==0)return 0;
        int left_max[] = new int[height.length];
            left_max[0] = height[0];
        int right_max[] = new int[height.length];
            right_max[right_max.length-1] = height[height.length-1];
        int minMax[] = new int[height.length];
        int count =0;
        for(int i=1;i<height.length;i++){
            left_max[i]=Math.max(left_max[i-1],height[i]);
            
        }
        
        for(int j=height.length-2;j>=0;j--){
            right_max[j]=Math.max(right_max[j+1],height[j]);
        }
        
        for(int k=0;k<height.length;k++){
            minMax[k] = Math.min(left_max[k],right_max[k]);
            count+=(minMax[k]-height[k]);
        }
        
        return count;
    }
}